"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2064],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var o=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,i=function(e,t){if(null==e)return{};var n,o,i={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=o.createContext({}),c=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=c(e.components);return o.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(n),f=i,m=d["".concat(l,".").concat(f)]||d[f]||u[f]||r;return n?o.createElement(m,a(a({ref:t},p),{},{components:n})):o.createElement(m,a({ref:t},p))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,a=new Array(r);a[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var c=2;c<r;c++)a[c]=n[c];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5050:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var o=n(7462),i=(n(7294),n(3905));const r={sidebar_position:5,description:"How to request and handle test notifications."},a="Test Notifications",s={unversionedId:"server-notifications/test-notifications",id:"server-notifications/test-notifications",title:"Test Notifications",description:"How to request and handle test notifications.",source:"@site/docs/server-notifications/test-notifications.mdx",sourceDirName:"server-notifications",slug:"/server-notifications/test-notifications",permalink:"/laravel-iap-docs/docs/server-notifications/test-notifications",draft:!1,editUrl:"https://github.com/imdhemy/laravel-iap-docs/blob/master/docs/server-notifications/test-notifications.mdx",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,description:"How to request and handle test notifications."},sidebar:"tutorialSidebar",previous:{title:"Available Events",permalink:"/laravel-iap-docs/docs/server-notifications/event-list"},next:{title:"Credentials",permalink:"/laravel-iap-docs/docs/category/credentials"}},l={},c=[{value:"Google Play",id:"google-play",level:2},{value:"App Store",id:"app-store",level:2}],p={toc:c};function u(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"test-notifications"},"Test Notifications"),(0,i.kt)("p",null,"Both Google Play and App Store provide a way to test the server notifications, so you can verify that your server is\ncorrectly set up to receive and handle the notifications."),(0,i.kt)("h2",{id:"google-play"},"Google Play"),(0,i.kt)("p",null,"After configuring the ",(0,i.kt)("a",{parentName:"p",href:"https://developer.android.com/google/play/billing/getting-ready#configure-rtdn"},"Google Play RTDN"),",\nand deploying your server with LIAP package enabled, You can test your configuration by using the ",(0,i.kt)("strong",{parentName:"p"},"Send Test Message"),"\nin the Google Play Console. If you have not configured a backend server to consume notifications, you can use the gcloud\ncommand line tool to verify the configuration. For instructions on processing messages using gcloud, ",(0,i.kt)("a",{parentName:"p",href:"https://cloud.google.com/pubsub/docs/publish-receive-messages-console#pull_the_message_from_the_subscription"},"see Pull the message\nfrom the subscription"),"."),(0,i.kt)("p",null,"LIAP will automatically handle the test notifications and add a log entry similar to the following:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"Google Play Test Notification, version: 1.0\n")),(0,i.kt)("h2",{id:"app-store"},"App Store"),(0,i.kt)("p",null,"To check the status of the test App Store server notification sent to your server. You can use the folloiwing command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"php artisan liap:apple:test-notification\n")),(0,i.kt)("p",null,'If you are testing on "sandbox" environment, you need to pass the ',(0,i.kt)("inlineCode",{parentName:"p"},"--sandbox")," option:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"php artisan liap:apple:test-notification --sandbox\n")),(0,i.kt)("p",null,"The command will request a test notification and will show you the notification token."),(0,i.kt)("p",null,"LIAP will automatically handle the test notifications and add a log entry similar to the following:"),(0,i.kt)("p",null,"If you are using Notifications ",(0,i.kt)("inlineCode",{parentName:"p"},"v1"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"AppStore Test Notification\n")),(0,i.kt)("p",null,"If you are using Notifications ",(0,i.kt)("inlineCode",{parentName:"p"},"v2"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"AppStoreV2NotificationHandler: Test notification received\n")))}u.isMDXComponent=!0}}]);